name: Deploy to Sakura Server

on:
  push:
    branches: [ main ]  # mainブランチにプッシュされたときに実行

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'  # さくらサーバーで使用しているPHPバージョンに合わせる
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, json, libxml
          coverage: none

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-dev --optimize-autoloader

      - name: Copy .env file
        run: cp .env.example .env
        
      - name: Update .env file for production
        run: |
          sed -i 's/APP_ENV=local/APP_ENV=production/' .env
          sed -i 's/APP_DEBUG=true/APP_DEBUG=false/' .env
          
      - name: Generate application key
        run: php artisan key:generate

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install NPM dependencies
        run: npm install
        
      - name: Build assets
        run: npm run build

      - name: Create root .htaccess
        run: |
          echo '<IfModule mod_rewrite.c>
              RewriteEngine On
              RewriteRule ^(.*)$ public/$1 [L]
          </IfModule>' > .htaccess

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          
      - name: Create deployment directory
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SAKURA_USER }}@${{ secrets.SAKURA_HOST }} "mkdir -p ${{ secrets.SAKURA_PATH }}"
          
      - name: Deploy to Sakura Server
        run: |
          rsync -avz --exclude='.git/' \
                    --exclude='.github/' \
                    --exclude='node_modules/' \
                    --exclude='.env.example' \
                    --exclude='.env.testing' \
                    --exclude='tests/' \
                    --exclude='storage/logs/*' \
                    --exclude='storage/framework/cache/*' \
                    --exclude='storage/framework/sessions/*' \
                    --exclude='storage/framework/views/*' \
                    -e 'ssh -i ~/.ssh/id_rsa' \
                    ./ ${{ secrets.SAKURA_USER }}@${{ secrets.SAKURA_HOST }}:${{ secrets.SAKURA_PATH }}

      - name: Set correct permissions
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SAKURA_USER }}@${{ secrets.SAKURA_HOST }} "cd ${{ secrets.SAKURA_PATH }} && \
          find . -type f -exec chmod 644 {} \; && \
          find . -type d -exec chmod 755 {} \; && \
          chmod -R 777 storage bootstrap/cache && \
          chmod 644 public/.htaccess && \
          chmod 644 .htaccess"

      - name: Create storage directories
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SAKURA_USER }}@${{ secrets.SAKURA_HOST }} "cd ${{ secrets.SAKURA_PATH }} && \
          mkdir -p storage/logs storage/framework/cache storage/framework/sessions storage/framework/views"

      - name: Clear all caches
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SAKURA_USER }}@${{ secrets.SAKURA_HOST }} "cd ${{ secrets.SAKURA_PATH }} && \
          php artisan cache:clear && \
          php artisan config:clear && \
          php artisan route:clear && \
          php artisan view:clear && \
          php artisan optimize:clear"

      - name: Exit maintenance mode (if applicable)
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SAKURA_USER }}@${{ secrets.SAKURA_HOST }} "cd ${{ secrets.SAKURA_PATH }} && \
          php artisan up"

      - name: Update database if needed
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SAKURA_USER }}@${{ secrets.SAKURA_HOST }} "cd ${{ secrets.SAKURA_PATH }} && \
          php artisan migrate --force"

      - name: Rebuild caches for production
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SAKURA_USER }}@${{ secrets.SAKURA_HOST }} "cd ${{ secrets.SAKURA_PATH }} && \
          php artisan config:cache && \
          php artisan route:cache && \
          php artisan view:cache"

      - name: Check route list (diagnostic)
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SAKURA_USER }}@${{ secrets.SAKURA_HOST }} "cd ${{ secrets.SAKURA_PATH }} && \
          php artisan route:list | grep -e '^ *GET' -e '^ *HEAD' -e '^+'"